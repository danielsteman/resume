{"version":3,"sources":["utils/urlExtractor.ts","hooks/useFetch.ts","reusables/Navigation/Navigation.tsx","reusables/Navigation/MobileNavigation.tsx","components/Header/Header.tsx","images/layered-waves-haikei.svg","images/mobile-waves.svg","images/memoji.png","reusables/TypeWriter/TypeWriter.tsx","components/Home/Home.tsx","reusables/Card/Card.tsx","utils/sliceArray.ts","utils/arrayToMap.ts","reusables/Skills/Skills.tsx","reusables/Title/Title.tsx","animations/terminal.svg","components/About/About.tsx","images/socials/linkedin-icon.svg","images/socials/github-icon.svg","images/socials/lastfm-icon.svg","images/socials/stackoverflow-icon.svg","components/Socials/Socials.tsx","components/Experience/Experience.tsx","components/Projects/SpotifyProject/SpotifyPD.tsx","components/Projects/SpotifyProject/SpotifyPI.tsx","components/Projects/SpotifyProject/SpotifyProject.tsx","components/Footer/Footer.tsx","animations/spinner.svg","components/LoadingScreen/LoadingScreen.tsx","App.tsx","index.tsx"],"names":["urlExtractor","api","page","fields","join","Error","axios","require","default","useFetch","namespace","useState","data","setData","loading","setLoading","error","setError","endpoint","useEffect","a","get","res","items","errorMessage","JSON","stringify","console","log","Navigation","className","navigation","map","item","href","MobileNavigation","open","setOpen","color","toggled","toggle","size","rounded","Header","forwardRef","window","innerWidth","TypeWriter","Home","custom_title","src","Memoji","alt","Waves","MobileWaves","Card","text","children","santizer","DOMPurify","sanitize","dangerouslySetInnerHTML","__html","toString","sliceArray","array","chunks","restructuredArray","i","length","push","slice","arrayToMap","keysArray","defaultValue","Object","assign","k","Skills","skills_","skillYears_","columns_","skillsTable","active","setActive","handleClick","skill","temp","keys","skillRow","j","onClick","onKeyDown","role","tabIndex","Title","title","About","Terminal","body","skills","skill_years","n_skills_columns","Socials","social_links","LinkedIn","Github","LastFm","StackOverflow","Experience","index","setIndex","employers","employer","Math","min","employer_ids","TransitionGroup","employment_title","employment_duration","employment_description","SpotifyPD","SpotifyPI","undefined","height","setHeight","width","setWidth","plotData","setPlotData","plotDiv","useCallback","node","getBoundingClientRect","axesStyle","tick0","tickcolor","tickwidth","gridcolor","gridwidth","zerolinecolor","zerolinewidth","colorMap","layout","paper_bgcolor","margin","pad","t","b","l","r","scene","yaxis","xaxis","zaxis","camera","eye","x","y","z","ref","config","displayModeBar","obj","xDim","yDim","zDim","type","mode","marker","cluster","symbol","opacity","hoverlabel","bgcolor","hoverinfo","trackName","SpotifyProject","Footer","footer_text","LoadingScreen","Spinner","App","useRef","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4iBAeeA,EAfM,SAACC,EAAaC,EAAeC,GAChD,OAAQF,GACN,IAAK,UACH,IACE,MAAM,sBAAN,OAA6BC,EAA7B,qBAA8CC,EAAQC,QACtD,SACA,MAAM,IAAIC,MAAM,mEAEpB,IAAK,YACH,MAAM,GAAN,OAAUJ,EAAV,KACF,QACE,MAAM,IAAII,MAAM,kCCRhBC,EAAQC,EAAQ,IAASC,QAqChBC,EA/BE,SAAsBC,EAAmBR,EAAeC,GACvE,MAAwBQ,mBAAiB,IAAzC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAWlB,EAAaU,EAAWR,EAAMC,GAmB/C,OAjBAgB,qBAAU,YACP,+BAAAC,EAAA,kCAAAA,EAAA,+EAEqBd,EAAMe,IAAN,UAZtB,sCAYsB,YAAwBH,IAF7C,OAESI,EAFT,OAIKT,EADgB,cAAdH,EACMY,EAEAA,EAAIV,KAAKW,MAAM,IAAMD,GANlC,gDASGL,EAAS,sBAAD,cATX,yBAWGF,GAAW,GAXd,qIAcA,IAECC,EAAc,CAAEQ,aAAa,mBAAD,OAAqBC,KAAKC,UAAUvB,GAApC,iBAAoDD,KAClE,cAAdQ,GACFiB,QAAQC,IAAIhB,GAEP,CAAEA,OAAME,UAASE,W,eCrBXa,EAdI,SAAC,GAAD,IAAGN,EAAH,EAAGA,MAAH,OACjB,qBAAKO,UAAU,MAAf,SACE,oBAAIA,UAAU,OAAd,SACGP,EAAMQ,WAAWC,KAAI,SAACC,GAAD,OACpB,6BACE,mBAAGC,KAAK,IAAR,SACGD,KAFIA,W,gBCiCFE,EAnCU,SAAC,GAAoB,IAAlBZ,EAAiB,EAAjBA,MAC1B,EAAwBZ,oBAAS,GAAjC,mBAAOyB,EAAP,KAAaC,EAAb,KAMA,OACE,gCACE,qBAAKP,UAAU,qBAAf,SACE,cAAC,IAAD,CACEQ,MAAM,UACNC,QAASH,EACTI,OAVW,WACjBH,GAASD,IAUHK,KAAM,GACNC,SAAO,MAGVN,GACC,qBAAKN,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,SACGP,EAAMQ,WAAWC,KAAI,SAACC,GAAD,OACpB,6BACE,mBAAGC,KAAK,IAAR,SACGD,KAFIA,cCARU,EApBAC,sBAAW,WACxB,MAAiCnC,EAAS,UAAW,OAAQ,CAAC,eAAtDG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASE,EAAvB,EAAuBA,MAEvB,OACE,sBAAKc,UAAU,kBAAf,UACGlB,GAAQA,EAAKmB,aACZc,OAAOC,WAAa,IAChB,cAAC,EAAD,CAAYvB,MAAOX,IACnB,cAAC,EAAD,CAAkBW,MAAOX,KAE9BE,GACC,6CAEDE,GACC,8BAAMA,UCpBC,G,MAAA,IAA0B,kDCA1B,MAA0B,yCCA1B,MAA0B,mCCQ1B+B,G,MANI,kBACjB,qBAAKjB,UAAU,aAAf,SACE,qBAAKA,UAAU,kBAAf,yDC+BWkB,EA1BF,SAAC,GAA8B,IAA5BjC,EAA2B,EAA3BA,WACd,EAAiCN,EAAS,UAAW,OAAQ,CAAC,iBAAtDG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASE,EAAvB,EAAuBA,MAIvB,OAFAG,qBAAU,kBAAMJ,EAAWD,KAAU,CAACA,IAGpC,sBAAKgB,UAAU,iBAAf,UACGlB,GAAQA,EAAKqC,cACZ,gCACE,qBAAKC,IAAKC,EAAQC,IAAI,SAAStB,UAAU,WACzC,cAAC,EAAD,IACGe,OAAOC,WAAa,IACjB,qBAAKhB,UAAU,cAAcoB,IAAKG,EAAOD,IAAI,UAC7C,qBAAKtB,UAAU,cAAcoB,IAAKI,EAAaF,IAAI,aAG5DtC,GACC,6CAEDE,GACC,8BAAMA,Q,yBCHCuC,G,MAdF,SAAC,GAA+C,IAAD,IAA5CC,YAA4C,MAArC,GAAqC,MAAjCC,gBAAiC,MAAtB,KAAsB,EACpDC,EAAWC,IAAUC,SAC3B,OACE,qBAAK9B,UAAU,YAAf,SACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAK+B,wBAAyB,CAAEC,OAAQJ,EAASF,EAAKO,eACrDN,W,OCTIO,G,MAVI,SAACC,EAAcC,GAGhC,IAFA,IAAMC,EAAyB,GAEtBC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,GAAKF,EACrCC,EAAkBG,KAAKL,EAAMM,MAAMH,EAAGA,EAAIF,IAG5C,OAAOC,I,eCFMK,EALI,SAACC,EAAqBC,GAEvC,OADeC,OAAOC,OAAP,MAAAD,OAAM,CAAQ,IAAR,mBAAeF,EAAUzC,KAAI,SAAC6C,GAAD,sBAAWA,EAAIH,UCsDpDI,EAxCiB,SAAC,GAEb,IAAD,IADjBC,eACiB,MADP,GACO,MADHC,mBACG,MADW,GACX,MADeC,gBACf,MAD0B,EAC1B,EACXC,EAAclB,EAAWe,EAASE,GACxC,EAA4BtE,mBAA0B,IAAtD,mBAAOwE,EAAP,KAAeC,EAAf,KAEMC,EAAc,SAACC,GACnB,IAAMC,EAAsC,IAA/BZ,OAAOa,KAAKL,GAAQd,OAC7BG,EAAWO,GAAS,GACpBI,EACJI,EAAKD,IAAUH,EAAOG,GACtBF,EAAU,eAAKG,KAGjB,OACE,qBAAKzD,UAAU,kBAAf,SACGoD,EAAYlD,KAAI,SAACyD,EAAoBrB,GAArB,OACf,qBAAKtC,UAAU,MAAf,SACG2D,EAASzD,KAAI,SAACsD,EAAeI,GAAhB,OACZ,qBAAK5D,UAAU,SAAf,SACE,qBACEA,UAAS,gBAAWqD,EAAOG,IAE3BK,QAAS,kBAAMN,EAAYC,IAC3BM,UAAW,kBAAMP,EAAYC,IAC7BO,KAAK,SACLC,SAAU,EANZ,SAQGX,EAAOG,IAAiC,IAAvBN,EAAYX,OAC1B,8BAAMW,EAAYZ,EAAIa,EAAWS,KACjC,8BAAMJ,KARLA,IAHoBA,OAFPG,EAAS,UCnB5BM,G,MAPD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACZ,sBAAKlE,UAAU,iBAAf,UACE,qBAAKA,UAAU,QAAf,SAAwBkE,IACxB,qBAAKlE,UAAU,mBCTJ,MAA0B,qCCqD1BmE,EA3CD,SAAC,GAA+B,IAA7BlF,EAA4B,EAA5BA,WASf,EAAiCN,EAAS,UAAW,QARtC,CACb,eACA,OACA,SACA,cACA,qBAGMG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASE,EAAvB,EAAuBA,MAIvB,OAFAG,qBAAU,kBAAMJ,EAAWD,KAAU,CAACA,IAGpC,sBAAKgB,UAAU,iBAAf,UACE,cAAC,EAAD,CAAOkE,MAAOpF,EAAKqC,eACnB,sBAAKnB,UAAU,iBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKoB,IAAKgD,EAAU9C,IAAI,eAE1B,sBAAKtB,UAAU,mBAAf,UACGlB,GACD,8BACE,cAAC,EAAD,CACE4C,KAAM5C,EAAKuF,KADb,SAGE,cAAC,EAAD,CACEpB,QAASnE,EAAKwF,OACdpB,YAAapE,EAAKyF,YAClBpB,SAAUrE,EAAK0F,uBAKpBtF,GACD,8BAAMA,cC7CD,G,MAAA,IAA0B,2CCA1B,MAA0B,wCCA1B,MAA0B,wCCA1B,MAA0B,+CCuC1BuF,EAhCC,WACd,MAAiC9F,EAAS,UAAW,UAAW,CAAC,iBAAzDG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASE,EAAvB,EAAuBA,MAEvB,OACE,sBAAKc,UAAU,mBAAf,UACGlB,GAAQA,EAAK4F,cACd,sBAAK1E,UAAU,gBAAf,UACE,mBAAGI,KAAMtB,EAAK4F,aAAa,GAA3B,SACE,qBAAK1E,UAAU,gBAAgBoB,IAAKuD,EAAUrD,IAAI,oBAEpD,mBAAGlB,KAAMtB,EAAK4F,aAAa,GAA3B,SACE,qBAAK1E,UAAU,cAAcoB,IAAKwD,EAAQtD,IAAI,kBAEhD,mBAAGlB,KAAMtB,EAAK4F,aAAa,GAA3B,SACE,qBAAK1E,UAAU,cAAcoB,IAAKyD,EAAQvD,IAAI,kBAEhD,mBAAGlB,KAAMtB,EAAK4F,aAAa,GAA3B,SACE,qBAAK1E,UAAU,qBAAqBoB,IAAK0D,EAAexD,IAAI,4BAI/DtC,GACC,6CAEDE,GACC,8BAAMA,Q,gBC4CC6F,EArEI,SAAC,GAAoC,IAAlC9F,EAAiC,EAAjCA,WAUpB,EAAiCN,EAAS,UAAW,aATtC,CACb,eACA,eACA,YACA,mBACA,sBACA,2BAGMG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASE,EAAvB,EAAuBA,MAEvBG,qBAAU,kBAAMJ,EAAWD,KAAU,CAACA,IAEtC,MAA0BH,mBAAS,GAAnC,mBAAOmG,EAAP,KAAcC,EAAd,KAEA,OACE,sBAAKjF,UAAU,sBAAf,UACGlB,GAAQA,EAAKoG,WACZ,gCACE,cAAC,EAAD,CAAOhB,MAAOpF,EAAKqC,eACnB,sBAAKnB,UAAU,sBAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAS,2BAAsBgF,OAEtC,qBAAKhF,UAAS,+BAA0BgF,GAAxC,SACGlG,EAAKoG,UAAUhF,KAAI,SAACiF,EAAkB7C,GAAnB,OAClB,qBACEtC,UAAU,WACV6D,QAAS,kBAAMoB,EAAS3C,IACxBwB,UAAW,kBAAMmB,EAASG,KAAKC,IAAI,EAAG/C,EAAI,KAE1CyB,KAAK,SACLC,SAAU,EANZ,SAQGmB,GAJIrG,EAAKwG,aAAahD,YAS/B,sBAAKtC,UAAU,eAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,WAAf,SACE,cAACuF,EAAA,EAAD,UACGzG,EAAK0G,iBAAiBR,OAG3B,qBAAKhF,UAAU,cAAf,SACGlB,EAAK2G,oBAAoBT,QAG9B,qBAAKhF,UAAU,iBAAf,SACGlB,EAAK4G,uBAAuBV,cAMtChG,GACC,6CAEDE,GACC,8BAAMA,QC1CCyG,G,YArBG,SAAC,GAAoC,IAAlC1G,EAAiC,EAAjCA,WACnB,EAAiCN,EAAS,UAAW,WAAY,CAAC,eAAgB,OAAQ,WAAlFG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASE,EAAvB,EAAuBA,MACvBG,qBAAU,kBAAMJ,EAAWD,KAAU,CAACA,IAGtC,OACE,sBAAKgB,UAAU,qCAAf,UACGlB,GACD,cAAC,EAAD,CACE4C,KAAM5C,EAAKuF,KADb,SAGE,cAAC,EAAD,CAAQpB,QAASnE,EAAKwF,OAAQnB,SARZ,MAWnBjE,GACC,8BAAMA,S,iBC+FC0G,G,MA9FG,SAAC,GAAoC,IAAlC3G,EAAiC,EAAjCA,WACnB,EAA4BJ,wBAASgH,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BlH,wBAASgH,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCpH,qBAAhC,mBAAOqH,EAAP,KAAiBC,EAAjB,KACMC,EAAUC,uBAAY,SAACC,GACd,OAATA,IACFP,EAAUO,EAAKC,wBAAwBT,QACvCG,EAASK,EAAKC,wBAAwBP,UAEvC,IAEH,EAAiCrH,EAAS,aAAlCG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASE,EAAvB,EAAuBA,MACvBG,qBAAU,kBAAMJ,EAAWD,KAAU,CAACA,IACtCK,qBAAU,WACRQ,QAAQC,IAAIhB,GACZqH,EAAYrH,KACX,CAACA,IAEJ,IAAM0H,EAAY,CAChBC,MAAO,EACPC,UAAW,UACXC,UAAW,EACXC,UAAW,UACXC,UAAW,EACXC,cAAe,UACfC,cAAe,GAGXC,EAAgB,CAMpB,EAAG,YACH,EAAG,IACH,EAAG,IACH,EAAG,GACH,EAAG,KAGCC,EAAS,CACbjB,QACAF,SACAoB,cAAe,QACfC,OAAQ,CACNC,IAAK,EACLC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,GAELC,MAAO,CACLC,MAAOlB,EACPmB,MAAOnB,EACPoB,MAAOpB,EACPqB,OAAQ,CAAEC,IAAK,CAAEC,EAAG,IAAKC,EAAG,IAAKC,EAAG,QAIxC,OACE,sBAAKjI,UAAU,+BAAf,UACGkG,GAAYA,EAASpH,MACpB,qBAAKkB,UAAU,UAAUkI,IAAK9B,EAA9B,SACE,cAAC,IAAD,CACE+B,OAAQ,CAAEC,gBAAgB,GAC1BtJ,KAAM,CACJ,CACEiJ,EAAG7B,EAASpH,KAAKoB,KAAI,SAACmI,GAAD,OAAcA,EAAIhK,OAAOiK,QAC9CN,EAAG9B,EAASpH,KAAKoB,KAAI,SAACmI,GAAD,OAAcA,EAAIhK,OAAOkK,QAC9CN,EAAG/B,EAASpH,KAAKoB,KAAI,SAACmI,GAAD,OAAcA,EAAIhK,OAAOmK,QAC9CC,KAAM,YACNC,KAAM,UACNC,OAAQ,CACNnI,MAAO0F,EAASpH,KAAKoB,KAAI,SAACmI,GAAD,OAAcrB,EAASqB,EAAIhK,OAAOuK,YAC3DC,OAAQ,SACRC,QAAS,IAEXC,WAAY,CAAEC,QAAS,QACvBC,UAAW,OACXvH,KAAMwE,EAASpH,KAAKoB,KAAI,SAACmI,GAAD,OAAcA,EAAIhK,OAAO6K,eAGrDjC,OAAQA,MAIb/H,GACC,8BAAMA,SC/FCiK,EAVQ,SAAC,GAAD,IAAGlK,EAAH,EAAGA,WAAH,OACrB,sBAAKe,UAAU,0BAAf,UACE,cAAC,EAAD,CAAOkE,MAAM,aACb,sBAAKlE,UAAU,0BAAf,UACE,cAAC,EAAD,CAAWf,WAAYA,IACvB,cAAC,EAAD,CAAWA,WAAYA,WCadmK,G,MAnBA,SAAC,GAAgC,IAA9BnK,EAA6B,EAA7BA,WAChB,EAAiCN,EAAS,UAAW,SAAU,CAAC,gBAAxDG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASE,EAAvB,EAAuBA,MAIvB,OAFAG,qBAAU,kBAAMJ,EAAWD,KAAU,CAACA,IAGpC,sBAAKgB,UAAU,kBAAf,UACIlB,GACA,qBAAKkB,UAAU,aAAf,SACGlB,EAAKuK,cAGTnK,GACC,8BAAMA,SClBC,MAA0B,oCCO1BoK,EALO,kBACpB,qBAAKtJ,UAAU,4BAAf,SACE,qBAAKoB,IAAKmI,EAASjI,IAAI,UAAUtB,UAAU,wBC2BhCwJ,EApBH,WACV,IAAMtB,EAAMuB,iBAAuB,MACnC,EAA8B5K,oBAAc,GAA5C,mBAAOG,EAAP,KAAgBC,EAAhB,KAEA,OACE,gCACGD,GAAW,cAAC,EAAD,IACZ,sBAAKgB,UAAU,OAAf,UACE,cAAC,EAAD,CAAQkI,IAAKA,IACb,cAAC,EAAD,CAAMjJ,WAAYA,IAClB,cAAC,EAAD,CAAOA,WAAYA,IACnB,cAAC,EAAD,CAAgBA,WAAYA,IAC5B,cAAC,EAAD,CAAYA,WAAYA,IACxB,cAAC,EAAD,IACA,cAAC,EAAD,CAAQA,WAAYA,WCpB5ByK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.70934c3d.chunk.js","sourcesContent":["const urlExtractor = (api: string, page?: string, fields?: string[] | undefined) => {\n  switch (api) {\n    case 'content':\n      try {\n        return `pages/?type=resume.${page}&fields=_,${fields!.join()}`;\n      } catch {\n        throw new Error('Provide `page` and `fields` parameters to consume `content` api');\n      }\n    case 'mlresults':\n      return `${api}/`;\n    default:\n      throw new Error('Provide a valid api endpoint');\n  }\n};\n\nexport default urlExtractor;\n","import { useState, useEffect } from 'react';\nimport urlExtractor from '../utils/urlExtractor';\n\nconst axios = require('axios').default;\n\nconst baseUrl = process.env.NODE_ENV === 'development'\n  ? 'http://localhost:8000/api/v2'\n  : 'https://www.danielsteman.com/api/v2';\n\nconst useFetch = <T extends any = any>(namespace: string, page?: string, fields?: string[]) => {\n  const [data, setData] = useState<T | {}>({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const endpoint = urlExtractor(namespace, page, fields);\n\n  useEffect(() => {\n    (async function getContent() {\n      try {\n        const res = await axios.get(`${baseUrl}/${endpoint}`);\n        if (namespace === 'mlresults') { // needs cleaner solution\n          setData(res);\n        } else {\n          setData(res.data.items[0] || res);\n        }\n      } catch (e) {\n        setError(`An error occurred: ${e}`);\n      } finally {\n        setLoading(false);\n      }\n    }());\n  }, []);\n\n  if (error) return { errorMessage: `Failed to fetch ${JSON.stringify(fields)} from ${page}` };\n  if (namespace === 'mlresults') {\n    console.log(data);\n  }\n  return { data, loading, error };\n};\n\nexport default useFetch;\n","import './Navigation.scss';\n\nconst Navigation = ({ items }: any) => (\n  <div className=\"nav\">\n    <ul className=\"item\">\n      {items.navigation.map((item: string) => (\n        <li key={item}>\n          <a href=\"/\">\n            {item}\n          </a>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default Navigation;\n","import { useState } from 'react';\nimport './MobileNavigation.scss';\nimport { Rotate as Hamburger } from 'hamburger-react';\n\nconst MobileNavigation = ({ items }: any) => {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div>\n      <div className=\"hamburgerContainer\">\n        <Hamburger\n          color=\"#BC6FF1\"\n          toggled={open}\n          toggle={handleOpen}\n          size={48}\n          rounded\n        />\n      </div>\n      {open && (\n        <div className=\"mobileNav\">\n          <ul className=\"mobileItem\">\n            {items.navigation.map((item: string) => (\n              <li key={item}>\n                <a href=\"/\">\n                  {item}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MobileNavigation;\n","import './Header.scss';\nimport { forwardRef } from 'react';\nimport useFetch from '../../hooks/useFetch';\nimport Navigation from '../../reusables/Navigation/Navigation';\nimport MobileNavigation from '../../reusables/Navigation/MobileNavigation';\n\nconst Header = forwardRef(() => {\n  const { data, loading, error } = useFetch('content', 'Home', ['navigation']);\n\n  return (\n    <div className=\"headerComponent\">\n      {data && data.navigation && (\n        window.innerWidth > 400\n          ? <Navigation items={data} />\n          : <MobileNavigation items={data} />\n      )}\n      {loading && (\n        <div>loading...</div>\n      )}\n      {error && (\n        <div>{error}</div>\n      )}\n    </div>\n  );\n});\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/layered-waves-haikei.fa39e680.svg\";","export default __webpack_public_path__ + \"static/media/mobile-waves.b6b47dee.svg\";","export default __webpack_public_path__ + \"static/media/memoji.bc90a67d.png\";","import './TypeWriter.scss';\n\nconst TypeWriter = () => (\n  <div className=\"typewriter\">\n    <div className=\"typewriter-text\">Hi there, I can help you out with stuff</div>\n  </div>\n);\n\nexport default TypeWriter;\n","import './Home.scss';\nimport { useEffect } from 'react';\nimport Waves from '../../images/layered-waves-haikei.svg';\nimport MobileWaves from '../../images/mobile-waves.svg';\nimport useFetch from '../../hooks/useFetch';\nimport Memoji from '../../images/memoji.png';\nimport { HomeProps } from '../../types';\nimport TypeWriter from '../../reusables/TypeWriter/TypeWriter';\n\nconst Home = ({ setLoading }:HomeProps) => {\n  const { data, loading, error } = useFetch('content', 'Home', ['custom_title']);\n\n  useEffect(() => setLoading(loading), [loading]);\n\n  return (\n    <div className=\"titleComponent\">\n      {data && data.custom_title && (\n        <div>\n          <img src={Memoji} alt=\"memoji\" className=\"memoji\" />\n          <TypeWriter />\n            {window.innerWidth > 400\n              ? <img className=\"pageDivider\" src={Waves} alt=\"waves\" />\n              : <img className=\"pageDivider\" src={MobileWaves} alt=\"waves\" />}\n        </div>\n      )}\n      {loading && (\n        <div>loading...</div>\n      )}\n      {error && (\n        <div>{error}</div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n\n// https://tympanus.net/Development/DistortedPixels/index.html\n// https://codepen.io/yaclive/pen/EayLYO\n","/* eslint-disable react/no-danger */\nimport DOMPurify from 'dompurify';\nimport './Card.scss';\nimport { ReactElement } from 'react';\n\ninterface CardProps {\n  // eslint-disable-next-line react/require-default-props\n  text?: string | (string|ReactElement)[],\n  // eslint-disable-next-line react/require-default-props\n  children?: React.ReactNode\n}\n\nconst Card = ({ text = '', children = null }: CardProps) => {\n  const santizer = DOMPurify.sanitize;\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        <div className=\"text\">\n          <div dangerouslySetInnerHTML={{ __html: santizer(text.toString()) }} />\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","const sliceArray = (array: any[], chunks: number) => {\n  const restructuredArray: any = [];\n\n  for (let i = 0; i < array.length; i += chunks) {\n    restructuredArray.push(array.slice(i, i + chunks));\n  }\n\n  return restructuredArray;\n};\n\nexport default sliceArray;\n","const arrayToMap = (keysArray: string[], defaultValue: any) => {\n  const object = Object.assign({}, ...keysArray.map((k) => ({ [k]: defaultValue })));\n  return object;\n};\n\nexport default arrayToMap;\n","import { FC, useState } from 'react';\nimport './Skills.scss';\nimport sliceArray from '../../utils/sliceArray';\nimport arrayToMap from '../../utils/arrayToMap';\n\nexport interface SkillsProps {\n  skills_: string[],\n  skillYears_?: never[],\n  columns_: number\n}\n\ninterface SkillsActiveMap {\n  [key: string]: boolean\n}\n\nconst Skills: FC<SkillsProps> = ({\n  skills_ = [], skillYears_ = [], columns_ = 1,\n}): JSX.Element => {\n  const skillsTable = sliceArray(skills_, columns_);\n  const [active, setActive] = useState<SkillsActiveMap>({});\n\n  const handleClick = (skill: string) => {\n    const temp = Object.keys(active).length === 0\n      ? arrayToMap(skills_, false)\n      : active;\n    temp[skill] = !active[skill];\n    setActive({ ...temp });\n  };\n\n  return (\n    <div className=\"skillsContainer\">\n      {skillsTable.map((skillRow: string[], i: number) => (\n        <div className=\"row\" key={skillRow[0]}>\n          {skillRow.map((skill: string, j: number) => (\n            <div className=\"column\" key={skill}>\n              <div\n                className={`skill ${active[skill]}`}\n                key={skill}\n                onClick={() => handleClick(skill)}\n                onKeyDown={() => handleClick(skill)}\n                role=\"button\"\n                tabIndex={0}\n              >\n                {active[skill] && skillYears_.length !== 0\n                  ? <div>{skillYears_[i * columns_ + j]}</div>\n                  : <div>{skill}</div>}\n              </div>\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Skills;\n","import './Title.scss';\n\ninterface TitleProps {\n  title: String\n}\n\nconst Title = ({ title }: TitleProps) => (\n  <div className=\"titleContainer\">\n    <div className=\"title\">{title}</div>\n    <div className=\"underline\" />\n  </div>\n);\n\nexport default Title;\n","export default __webpack_public_path__ + \"static/media/terminal.59df686c.svg\";","import './About.scss';\nimport { useEffect } from 'react';\nimport Card from '../../reusables/Card/Card';\nimport Skills from '../../reusables/Skills/Skills';\nimport Title from '../../reusables/Title/Title';\nimport useFetch from '../../hooks/useFetch';\nimport { AboutProps } from '../../types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport Terminal from '../../animations/terminal.svg';\n\nconst About = ({ setLoading }:AboutProps) => {\n  const fields = [\n    'custom_title',\n    'body',\n    'skills',\n    'skill_years',\n    'n_skills_columns',\n  ];\n\n  const { data, loading, error } = useFetch('content', 'About', fields);\n\n  useEffect(() => setLoading(loading), [loading]);\n\n  return (\n    <div className=\"aboutComponent\">\n      <Title title={data.custom_title} />\n      <div className=\"aboutContainer\">\n        <div className=\"aboutAnimation\">\n          <img src={Terminal} alt=\"terminal\" />\n        </div>\n        <div className=\"aboutDescription\">\n          {data && (\n          <div>\n            <Card\n              text={data.body}\n            >\n              <Skills\n                skills_={data.skills}\n                skillYears_={data.skill_years}\n                columns_={data.n_skills_columns}\n              />\n            </Card>\n          </div>\n          )}\n          {error && (\n          <div>{error}</div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","export default __webpack_public_path__ + \"static/media/linkedin-icon.786559cf.svg\";","export default __webpack_public_path__ + \"static/media/github-icon.f434f9ff.svg\";","export default __webpack_public_path__ + \"static/media/lastfm-icon.9bdfda36.svg\";","export default __webpack_public_path__ + \"static/media/stackoverflow-icon.121f2485.svg\";","import './Socials.scss';\nimport LinkedIn from '../../images/socials/linkedin-icon.svg';\nimport Github from '../../images/socials/github-icon.svg';\nimport LastFm from '../../images/socials/lastfm-icon.svg';\nimport StackOverflow from '../../images/socials/stackoverflow-icon.svg';\nimport useFetch from '../../hooks/useFetch';\n\nconst Socials = () => {\n  const { data, loading, error } = useFetch('content', 'Socials', ['social_links']);\n\n  return (\n    <div className=\"socialsComponent\">\n      {data && data.social_links && (\n      <div className=\"logoContainer\">\n        <a href={data.social_links[0]}>\n          <img className=\"logo linkedin\" src={LinkedIn} alt=\"LinkedIn Logo\" />\n        </a>\n        <a href={data.social_links[1]}>\n          <img className=\"logo github\" src={Github} alt=\"Github Logo\" />\n        </a>\n        <a href={data.social_links[2]}>\n          <img className=\"logo lastfm\" src={LastFm} alt=\"LastFm Logo\" />\n        </a>\n        <a href={data.social_links[3]}>\n          <img className=\"logo stackoverflow\" src={StackOverflow} alt=\"StackOverflow Logo\" />\n        </a>\n      </div>\n      )}\n      {loading && (\n        <div>loading...</div>\n      )}\n      {error && (\n        <div>{error}</div>\n      )}\n    </div>\n\n  );\n};\n\nexport default Socials;\n","import './Experience.scss';\nimport { useEffect, useState } from 'react';\nimport { TransitionGroup } from 'react-transition-group';\nimport useFetch from '../../hooks/useFetch';\nimport Title from '../../reusables/Title/Title';\nimport { ExperienceProps } from '../../types';\n\nconst Experience = ({ setLoading }:ExperienceProps) => {\n  const fields = [\n    'custom_title',\n    'employer_ids',\n    'employers',\n    'employment_title',\n    'employment_duration',\n    'employment_description',\n  ];\n\n  const { data, loading, error } = useFetch('content', 'Experience', fields);\n\n  useEffect(() => setLoading(loading), [loading]);\n\n  const [index, setIndex] = useState(0);\n\n  return (\n    <div className=\"experienceComponent\">\n      {data && data.employers && (\n        <div>\n          <Title title={data.custom_title} />\n          <div className=\"experienceContainer\">\n            <div className=\"employerContainer\">\n              <div className=\"scrollBar\">\n                <div className={`slider moveSlider${index}`} />\n              </div>\n              <div className={`employerList moveList${index}`}>\n                {data.employers.map((employer: string, i: number) => (\n                  <div\n                    className=\"employer\"\n                    onClick={() => setIndex(i)}\n                    onKeyDown={() => setIndex(Math.min(0, i - 1))}\n                    key={data.employer_ids[i]}\n                    role=\"button\"\n                    tabIndex={0}\n                  >\n                    {employer}\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"jobContainer\">\n              <div className=\"jobTitleContainer\">\n                <div className=\"jobTitle\">\n                  <TransitionGroup>\n                    {data.employment_title[index]}\n                  </TransitionGroup>\n                </div>\n                <div className=\"jobDuration\">\n                  {data.employment_duration[index]}\n                </div>\n              </div>\n              <div className=\"jobDescription\">\n                {data.employment_description[index]}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {loading && (\n        <div>loading...</div>\n      )}\n      {error && (\n        <div>{error}</div>\n      )}\n    </div>\n  );\n};\n\nexport default Experience;\n","import { useEffect } from 'react';\nimport './SpotifyPD.scss';\nimport Skills from '../../../reusables/Skills/Skills';\nimport Card from '../../../reusables/Card/Card';\nimport useFetch from '../../../hooks/useFetch';\nimport { SpotifyPDProps } from '../../../types';\n\nconst SpotifyPD = ({ setLoading }: SpotifyPDProps) => {\n  const { data, loading, error } = useFetch('content', 'Projects', ['custom_title', 'body', 'skills']);\n  useEffect(() => setLoading(loading), [loading]);\n  const columns: number = 2;\n\n  return (\n    <div className=\"spotifyProjectDescriptionComponent\">\n      {data && (\n      <Card\n        text={data.body}\n      >\n        <Skills skills_={data.skills} columns_={columns} />\n      </Card>\n      )}\n      {error && (\n        <div>{error}</div>\n      )}\n    </div>\n  );\n};\n\nexport default SpotifyPD;\n","import Plot from 'react-plotly.js';\nimport './SpotifyPI.scss';\nimport { useCallback, useEffect, useState } from 'react';\nimport useFetch from '../../../hooks/useFetch';\nimport { SpotifyPIProps } from '../../../types';\n\n// interface IPlotData {\n//   data: Array<IPlotDataRow>;\n// }\n\n// interface IPlotDataRow {\n//   fields: IPlotDataFields\n// }\n\n// interface IPlotDataFields {\n//   cluster: number,\n//   xDim: number,\n//   yDim: number,\n//   zDim: number,\n//   trackName: string,\n//   artist: string\n// }\n\nconst SpotifyPI = ({ setLoading }: SpotifyPIProps) => {\n  const [height, setHeight] = useState(undefined);\n  const [width, setWidth] = useState(undefined);\n  const [plotData, setPlotData] = useState<any>();\n  const plotDiv = useCallback((node) => {\n    if (node !== null) {\n      setHeight(node.getBoundingClientRect().height);\n      setWidth(node.getBoundingClientRect().width);\n    }\n  }, []);\n\n  const { data, loading, error } = useFetch('mlresults');\n  useEffect(() => setLoading(loading), [loading]);\n  useEffect(() => {\n    console.log(data);\n    setPlotData(data);\n  }, [data]);\n\n  const axesStyle = {\n    tick0: 0,\n    tickcolor: '#D3D3D3',\n    tickwidth: 2,\n    gridcolor: '#D3D3D3',\n    gridwidth: 2,\n    zerolinecolor: '#D3D3D3',\n    zerolinewidth: 2,\n  };\n\n  const colorMap: any = {\n    // 1: 'rgb:(66, 135, 245)',\n    // 2: 'rgb:(156, 66, 245)',\n    // 3: 'rgb:(0, 245, 57)',\n    // 4: 'rgb:(208, 245, 0)',\n    // 5: 'rgb:(245, 0, 0)',\n    1: 'aliceblue',\n    2: 256,\n    3: 128,\n    4: 64,\n    5: 192,\n  };\n\n  const layout = {\n    width,\n    height,\n    paper_bgcolor: 'black',\n    margin: {\n      pad: 0,\n      t: 0,\n      b: 0,\n      l: 0,\n      r: 0,\n    },\n    scene: {\n      yaxis: axesStyle,\n      xaxis: axesStyle,\n      zaxis: axesStyle,\n      camera: { eye: { x: 1.5, y: 1.5, z: 1.5 } },\n    },\n  };\n\n  return (\n    <div className=\"spotifyProjectGraphComponent\">\n      {plotData && plotData.data && (\n        <div className=\"plotDiv\" ref={plotDiv}>\n          <Plot\n            config={{ displayModeBar: false }}\n            data={[\n              {\n                x: plotData.data.map((obj: any) => obj.fields.xDim),\n                y: plotData.data.map((obj: any) => obj.fields.yDim),\n                z: plotData.data.map((obj: any) => obj.fields.zDim),\n                type: 'scatter3d',\n                mode: 'markers',\n                marker: {\n                  color: plotData.data.map((obj: any) => colorMap[obj.fields.cluster]),\n                  symbol: 'circle',\n                  opacity: 0.8,\n                },\n                hoverlabel: { bgcolor: 'grey' },\n                hoverinfo: 'text',\n                text: plotData.data.map((obj: any) => obj.fields.trackName),\n              },\n            ]}\n            layout={layout}\n          />\n        </div>\n      )}\n      {error && (\n        <div>{error}</div>\n      )}\n    </div>\n  );\n};\n\nexport default SpotifyPI;\n\n// check example: https://stackoverflow.com/questions/39084438/how-to-import-plotly-js-into-typescript\n","import './SpotifyProject.scss';\nimport Title from '../../../reusables/Title/Title';\nimport SpotifyPD from './SpotifyPD';\nimport SpotifyPI from './SpotifyPI';\nimport { SpotifyPIProps } from '../../../types';\n\nconst SpotifyProject = ({ setLoading }: SpotifyPIProps) => (\n  <div className=\"spotifyProjectComponent\">\n    <Title title=\"PROJECTS\" />\n    <div className=\"spotifyProjectContainer\">\n      <SpotifyPD setLoading={setLoading} />\n      <SpotifyPI setLoading={setLoading} />\n    </div>\n  </div>\n);\n\nexport default SpotifyProject;\n","import { useEffect } from 'react';\nimport useFetch from '../../hooks/useFetch';\nimport { FooterProps } from '../../types';\nimport './Footer.scss';\n\nconst Footer = ({ setLoading }:FooterProps) => {\n  const { data, loading, error } = useFetch('content', 'Footer', ['footer_text']);\n\n  useEffect(() => setLoading(loading), [loading]);\n\n  return (\n    <div className=\"footerComponent\">\n      { data && (\n        <div className=\"footerText\">\n          {data.footer_text}\n        </div>\n      )}\n      {error && (\n        <div>{error}</div>\n      )}\n    </div>\n  );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/spinner.3d4e231b.svg\";","import Spinner from '../../animations/spinner.svg';\n\nconst LoadingScreen = () => (\n  <div className=\"loadingAnimationContainer\">\n    <img src={Spinner} alt=\"loading\" className=\"loadingAnimation\" />\n  </div>\n);\nexport default LoadingScreen;\n","import './App.scss';\nimport React, { useRef, useState } from 'react';\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\nimport About from './components/About/About';\nimport Socials from './components/Socials/Socials';\nimport Experience from './components/Experience/Experience';\nimport SpotifyProject from './components/Projects/SpotifyProject/SpotifyProject';\nimport Footer from './components/Footer/Footer';\nimport LoadingScreen from './components/LoadingScreen/LoadingScreen';\n\nconst App = () => {\n  const ref = useRef<HTMLDivElement>(null);\n  const [loading, setLoading] = useState<any>(true);\n\n  return (\n    <div>\n      {loading && <LoadingScreen />}\n      <div className=\"grid\">\n        <Header ref={ref} />\n        <Home setLoading={setLoading} />\n        <About setLoading={setLoading} />\n        <SpotifyProject setLoading={setLoading} />\n        <Experience setLoading={setLoading} />\n        <Socials />\n        <Footer setLoading={setLoading} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.scss';\nimport React from 'react';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}